[buildout]
extends =
    https://raw.github.com/collective/buildout.plonetest/master/test-4.3.x.cfg
    https://raw.github.com/collective/buildout.plonetest/master/qa.cfg
    https://raw.github.com/plone/plone.app.robotframework/master/versions.cfg
    versions-4.3.x.cfg

newest = false
show-picked-versions = true

package-name = Products.PloneServicesCenter
package-extras = [test]

eggs +=
    Products.PDBDebugMode
    Products.PrintingMailHost
    aws.zope2zcmldoc
    iw.debug
    plone.app.debugtoolbar
    plone.reload
    zptlint

parts +=
    instance-sitecustomize
    checkversions
    dependencychecker
    i18ndude
    rebuild_i18n-sh
    omelette
    mkdir-chameleon
#    plonesite
#    test
#    test-dependencies
    zopepy
    createzopecoverage
    coverage
    report

[instance]
verbose-security = on
debug-mode = on
event-log-level = debug
eggs +=
    ${buildout:package-name}
    ${buildout:eggs}
zcml +=
    aws.zope2zcmldoc
    iw.debug
    ${buildout:package-name}
environment-vars = 
    zope_i18n_compile_mo_files true
    CHAMELEON_DEBUG true

[instance-sitecustomize]
recipe = collective.recipe.template
output = ${buildout:bin-directory}/sitecustomize.py
mode = 600
input = inline:
   import sys
   sys.setdefaultencoding('utf-8')

[checkversions]
recipe = zc.recipe.egg
eggs = z3c.checkversions [buildout]

[dependencychecker]
recipe = zc.recipe.egg
eggs = z3c.dependencychecker

[i18ndude]
recipe = zc.recipe.egg
eggs = i18ndude

[omelette]
recipe = collective.recipe.omelette
eggs = ${instance:eggs}

[code-analysis]
directory = ${buildout:directory}/Products/PloneServicesCenter
pre-commit-hook = True
flake8-ignore = E501
zptlint = True
zptlint-bin = ${buildout:bin-directory}/zptlint
clean-lines = True
deprecated-aliases = True
imports = True
flake8-extensions =
#    flake8-blind-except
    flake8-coding
    flake8-debugger
    flake8-quotes
#    pep8-naming
    flake8-plone-api

[mkdir-chameleon]
recipe = plone.recipe.command
command =
    mkdir -p ${buildout:directory}/var/chameleon-cache
    rm -Rf ${buildout:directory}/var/chameleon-cache/*
update-command = ${:command}

[plonesite]
recipe = collective.recipe.plonesite
site-id = test
site-replace = true
default-language = es
# Create default plone content like News, Events...
profiles-initial = Products.CMFPlone:plone-content
profiles = Products.PloneServicesCenter:default

[test]
recipe = zc.recipe.testrunner
defaults = ['--auto-color', '--auto-progress']
eggs =
    ${buildout:package-name} ${buildout:package-extras}
    ${buildout:test-eggs}

[test-dependencies]
recipe = zc.recipe.testrunner
defaults = ['--auto-color', '--auto-progress']
eggs =
#    Products.ArchAddOn [test]

[zopepy]
recipe = zc.recipe.egg
eggs = ${instance:eggs}
interpreter = zopepy
scripts = zopepy

[createzopecoverage]
recipe = createzopecoverage

[coverage]
recipe = zc.recipe.egg
eggs = coverage
initialization =
    include = '--source=${buildout:directory}/Products'
    sys.argv = sys.argv[:] + ['run', include, 'bin/test', '--all']

[report]
recipe = zc.recipe.egg
eggs = coverage
scripts = coverage=report
initialization =
    sys.argv = sys.argv[:] + ['html', '-i']

[robot]
recipe = zc.recipe.egg
eggs =
    ${test:eggs}
    plone.app.robotframework
scripts =
    robot-server
    robot

[versions]
# use latest version of setuptools
setuptools =
